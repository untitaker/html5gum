name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
  check_minimal:
    name: Check (no default features)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: '--no-default-features'
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.18.5'
          args: '--all-features -- --test-threads 1'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1.0.2
        with:
          # GitHub actions' rules for when secrets are available are too
          # complicated. They're not available in third-party PRs, but then
          # also not in PRs from dependabot, and there's no way to skip this
          # step if the secret is just unavailable. Instead we just publish the
          # secret, there's just not really a ton of risk in uploading random
          # trash to codecov in the first place.
          token: 66391fe6-c52d-4f95-9c64-cf7c123f557c
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - run: cargo clippy --all-features --tests -- -D clippy::all

  rustdoc:
    name: rustdoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # assert cargo doc succeeds
      - run: cargo doc

      # assert there are no warnings
      - run: '[ -z "$(cargo doc || grep warning)" ]'
